name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Verify index.html exists
      run: |
        if [ ! -f index.html ]; then
          echo "ERROR: index.html not found!"
          exit 1
        fi
        echo "✓ index.html found"
    
    - name: Install Capacitor globally
      run: npm install -g @capacitor/cli
    
    - name: Create package.json
      run: |
        cat > package.json << 'EOF'
        {
          "name": "controle-financeiro",
          "version": "1.0.0",
          "description": "Sistema de Controle Financeiro",
          "dependencies": {
            "@capacitor/android": "^6.1.2",
            "@capacitor/cli": "^6.1.2",
            "@capacitor/core": "^6.1.2"
          }
        }
        EOF
    
    - name: Install dependencies
      run: npm install
    
    - name: Create capacitor.config.json
      run: |
        cat > capacitor.config.json << 'EOF'
        {
          "appId": "com.financeiro.app",
          "appName": "Controle Financeiro",
          "webDir": ".",
          "bundledWebRuntime": false
        }
        EOF
    
    - name: Initialize Capacitor (if needed)
      run: |
        if [ ! -d "android" ]; then
          echo "Initializing Capacitor..."
          npx cap add android
        else
          echo "✓ Android platform already exists"
        fi
    
    - name: Update capacitor.config.ts in android
      run: |
        echo "Updating Android configuration..."
        npx cap sync android --no-build
    
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
    
    - name: Build APK Debug
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon --stacktrace
    
    - name: List generated files
      run: |
        echo "Looking for APK files..."
        find android/app/build/outputs -name "*.apk" -type f
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: controle-financeiro-debug
        path: android/app/build/outputs/apk/debug/*.apk
        if-no-files-found: error
